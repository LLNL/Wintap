/*
 * Copyright (c) 2022, Lawrence Livermore National Security, LLC.
 * Produced at the Lawrence Livermore National Laboratory.
 * All rights reserved.
 */

/*
 * This class is generated by the KeyGen Utility. 
 * DO NOT EDIT DIRECTLY!
 *
 */

using Org.BouncyCastle.Crypto;
using System;
using System.Text;

namespace gov.llnl.wintap.etl.transform
{
    internal class IdGenerator
    {
        // Helper methods

        // Generate the hash.
        internal string GetHash(string preImage)
        {
            byte[] buffer = Encoding.UTF8.GetBytes(preImage);
            byte[] preImageBytes = Encoding.UTF8.GetBytes(preImage);
            IDigest hash = new Org.BouncyCastle.Crypto.Digests.MD5Digest();
            byte[] result = new byte[hash.GetDigestSize()];
            hash.BlockUpdate(preImageBytes, 0, preImageBytes.Length);
            hash.DoFinal(result, 0);
            StringBuilder hashStr = new StringBuilder(9999);
            for (int i = 0; i < result.Length; i++)
            {
                hashStr.Append(result[i].ToString("X2"));
            }
            return hashStr.ToString();
        }

        internal string GenAttrKeyForAutonomous_System(string inContext
          , string inASN
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Autonomous_System`");
            preImage.Append(inASN);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForCollection_Key(string inContext
          , string inCollectionID
          , string inCollectionType
          , string inDisplayLabel
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Collection_Key`");
            preImage.Append(inCollectionID);
            preImage.Append("`");
            preImage.Append(inCollectionType);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inDisplayLabel);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForDialed_Digits(string inContext
          , string inDigits
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Dialed_Digits`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inDigits);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForEmail_Address(string inContext
          , string inAddress
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Email_Address`");
            preImage.Append(inAddress);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForFive_Tuple_Key(string inContext
          , string inLowAddr
          , long inLowAddrLong
          , string inLowAddrPrivateGateway
          , int inLowPort
          , string inHighAddr
          , long inHighAddrLong
          , string inHighAddrPrivateGateway
          , int inHighPort
          , string inL4_Protocol
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Five_Tuple_Key`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inHighAddr);
            preImage.Append("`");
            preImage.Append(inHighAddrLong);
            preImage.Append("`");
            if (inHighAddrPrivateGateway != null)
            {
                preImage.Append(inHighAddrPrivateGateway);
            }
            preImage.Append("`");
            preImage.Append(inHighPort);
            preImage.Append("`");
            preImage.Append(inL4_Protocol);
            preImage.Append("`");
            preImage.Append(inLowAddr);
            preImage.Append("`");
            preImage.Append(inLowAddrLong);
            preImage.Append("`");
            if (inLowAddrPrivateGateway != null)
            {
                preImage.Append(inLowAddrPrivateGateway);
            }
            preImage.Append("`");
            preImage.Append(inLowPort);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForGhost_Id(string inContext
          , string inLabel
          , string inKey
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Ghost_Id`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inKey);
            preImage.Append("`");
            preImage.Append(inLabel);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForIPV4_Address(string inContext
          , string inAddress
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("IPV4_Address`");
            preImage.Append(inAddress);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            if (inLongAddress != null)
            {
                preImage.Append(inLongAddress);
            }
            preImage.Append("`");
            if (inPrivateGateway != null)
            {
                preImage.Append(inPrivateGateway);
            }
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForIPV4_Net_Address(string inContext
          , string inAddress
          , int inMaskBits
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("IPV4_Net_Address`");
            preImage.Append(inAddress);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            if (inLongAddress != null)
            {
                preImage.Append(inLongAddress);
            }
            preImage.Append("`");
            preImage.Append(inMaskBits);
            preImage.Append("`");
            if (inPrivateGateway != null)
            {
                preImage.Append(inPrivateGateway);
            }
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForIPV6_Address(string inContext
          , string inAddress
          , string inPrivateGateway
          , string inLongAddress
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("IPV6_Address`");
            preImage.Append(inAddress);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            if (inLongAddress != null)
            {
                preImage.Append(inLongAddress);
            }
            preImage.Append("`");
            if (inPrivateGateway != null)
            {
                preImage.Append(inPrivateGateway);
            }
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForMAC_Address(string inContext
          , string inAddress
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("MAC_Address`");
            preImage.Append(inAddress);
            preImage.Append("`");
            preImage.Append(inContext);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForPerson(string inContext
          , string inName
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Person`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inName);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForProcess_ID(string inContext
          , string inHostName
          , int inPid
          , long inFirstEventTime
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Process_ID`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inFirstEventTime);
            preImage.Append("`");
            preImage.Append(inHostName);
            preImage.Append("`");
            preImage.Append(inPid);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForRegistry_Key(string inContext, string inHostName, string inPath, string inValueName)
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("Registry_Key`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inHostName);
            preImage.Append("`");
            preImage.Append(inPath);
            preImage.Append("`");
            if (inValueName != null)
            {
                preImage.Append(inValueName);
            }
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForFile(string inContext, string inHostName, string inPath)
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("File`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inHostName);
            preImage.Append("`");
            preImage.Append(inPath);
            preImage.Append("`");
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForSensorHash(string inContext
          , string inType
          , string inSensorHash
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("SensorHash`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inSensorHash);
            preImage.Append("`");
            preImage.Append(inType);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForSystem_Id(string inContext
          , string inName
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("System_Id`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inName);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForURI(string inContext
          , string inURI
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("URI`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inURI);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }
        internal string GenAttrKeyForUser_Account(string inContext
          , string inUsername
          , string inSystem
          , string inService
          )
        {
            StringBuilder preImage = new StringBuilder(9999);
            preImage.Append("User_Account`");
            preImage.Append(inContext);
            preImage.Append("`");
            preImage.Append(inService);
            preImage.Append("`");
            preImage.Append(inSystem);
            preImage.Append("`");
            preImage.Append(inUsername);
            preImage.Append("`");
            return GetHash(preImage.ToString());
        }

        // Generate the Entity (for now just node) key methods.
        internal string GenKeyForIPV4_Subnet(string inContext
          , string inAddress
          , int inMaskBits
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForIPV4_Net_Address(inContext
           , inAddress
           , inMaskBits
           , inPrivateGateway
           , inLongAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("IPV4_Subnet");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForIPV4_Router(string inContext
          , string inName
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForSystem_Id(inContext
           , inName
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("IPV4_Router");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForIPV4_Switch(string inContext
          , string inName
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForSystem_Id(inContext
           , inName
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("IPV4_Switch");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForIPV4_Address(string inContext
          , string inAddress
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForIPV4_Address(inContext
           , inAddress
           , inPrivateGateway
           , inLongAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("IPV4_Address");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForIPV6_Address(string inContext
          , string inAddress
          , string inPrivateGateway
          , string inLongAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForIPV6_Address(inContext
           , inAddress
           , inPrivateGateway
           , inLongAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("IPV6_Address");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForDestination_Unreachable(string inContext
          , string inAddress
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForIPV4_Address(inContext
           , inAddress
           , inPrivateGateway
           , inLongAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Destination_Unreachable");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForTraceroute_Ghost(string inContext
          , string inLabel
          , string inKey
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForGhost_Id(inContext
           , inLabel
           , inKey
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Traceroute_Ghost");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForAutonomous_System(string inContext
          , string inASN
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForAutonomous_System(inContext
           , inASN
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Autonomous_System");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForEmail_Address(string inContext
          , string inAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForEmail_Address(inContext
           , inAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Email_Address");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForAccount(string inContext
          , string inUsername
          , string inSystem
          , string inService
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForUser_Account(inContext
           , inUsername
           , inSystem
           , inService
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Account");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForPerson(string inContext
          , string inName
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForPerson(inContext
           , inName
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Person");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForPhone_Number(string inContext
          , string inDigits
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForDialed_Digits(inContext
           , inDigits
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Phone_Number");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForHost(string inContext
          , string inName
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForSystem_Id(inContext
           , inName
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Host");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForSNMP_DB(string inContext
          , string inAddress
          , string inPrivateGateway
          , long inLongAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForIPV4_Address(inContext
           , inAddress
           , inPrivateGateway
           , inLongAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("SNMP_DB");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForProcess(string inContext, string inHostName, int inPid, long inFirstEventTime, string msgType)
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForProcess_ID(inContext, inHostName, inPid, inFirstEventTime);

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Process");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForMAC_Address(string inContext
          , string inAddress
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForMAC_Address(inContext
           , inAddress
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("MAC_Address");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForFive_Tuple_Conn(string inContext
          , string inLowAddr
          , long inLowAddrLong
          , string inLowAddrPrivateGateway
          , int inLowPort
          , string inHighAddr
          , long inHighAddrLong
          , string inHighAddrPrivateGateway
          , int inHighPort
          , string inL4_Protocol
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForFive_Tuple_Key(inContext
           , inLowAddr
           , inLowAddrLong
           , inLowAddrPrivateGateway
           , inLowPort
           , inHighAddr
           , inHighAddrLong
           , inHighAddrPrivateGateway
           , inHighPort
           , inL4_Protocol
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Five_Tuple_Conn");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForDNS_Request(string inContext
          , string inLowAddr
          , long inLowAddrLong
          , string inLowAddrPrivateGateway
          , int inLowPort
          , string inHighAddr
          , long inHighAddrLong
          , string inHighAddrPrivateGateway
          , int inHighPort
          , string inL4_Protocol
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForFive_Tuple_Key(inContext
           , inLowAddr
           , inLowAddrLong
           , inLowAddrPrivateGateway
           , inLowPort
           , inHighAddr
           , inHighAddrLong
           , inHighAddrPrivateGateway
           , inHighPort
           , inL4_Protocol
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("DNS_Request");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForCollection(string inContext
          , string inCollectionID
          , string inCollectionType
          , string inDisplayLabel
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForCollection_Key(inContext
           , inCollectionID
           , inCollectionType
           , inDisplayLabel
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Collection");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForFile_Data(string inContext
          , string inType
          , string inSensorHash
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForSensorHash(inContext
           , inType
           , inSensorHash
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("File_Data");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForURI(string inContext
          , string inURI
          )
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForURI(inContext
           , inURI
           );

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("URI");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForRegistry_Entry(string inContext, string inHostName, string inPath, string inValueName)
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForRegistry_Key(inContext, inHostName, inPath, inValueName);

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("Registry_Entry");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

        internal string GenKeyForFile(string inContext, string inHostName, string inPath)
        {
            // Get the attribute key hash
            String attrKey = GenAttrKeyForFile(inContext, inHostName, inPath);

            // Add the entity name
            StringBuilder preImage = new StringBuilder();
            preImage.Append("N`");
            preImage.Append("File");
            preImage.Append("`");
            preImage.Append(attrKey);
            preImage.Append("`");

            // Return as a hash
            return GetHash(preImage.ToString());
        }

    }
}